{"id":"QdeU","dependencies":[{"name":"/Users/server/Projects/signifly/package.json","includedInParent":true,"mtime":1585582337181},{"name":"imagesloaded","loc":{"line":1,"column":29},"parent":"/Users/server/Projects/signifly/src/js/app.js","resolved":"/Users/server/Projects/signifly/node_modules/imagesloaded/imagesloaded.js"},{"name":"../data/users.json","loc":{"line":2,"column":20},"parent":"/Users/server/Projects/signifly/src/js/app.js","resolved":"/Users/server/Projects/signifly/src/data/users.json"}],"generated":{"js":"\"use strict\";\n\nvar _users = _interopRequireDefault(require(\"../data/users.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar imagesLoaded = require('imagesloaded');\n\n// Preload images\nvar preloadImages = function preloadImages() {\n  return new Promise(function (resolve, reject) {\n    imagesLoaded(document.querySelectorAll('.screen'), {\n      background: true\n    }, resolve);\n  });\n};\n\nPromise.all([preloadImages()]).then(function () {\n  // Remove loader (loading class)\n  document.body.classList.remove('loading');\n});\n\nfunction main() {\n  var users = _users.default;\n  var isReadonly = !!window.location.search;\n\n  if (isReadonly) {\n    var queryParam = window.location.search.replace(\"?team=\", \"\");\n\n    if (queryParam) {\n      document.querySelector('body').classList.add('with-team');\n      var usersToDisplay = queryParam.split(\",\");\n\n      if (usersToDisplay.length > 0) {\n        users = _users.default.filter(function (user) {\n          return usersToDisplay.includes(user.id.toString());\n        });\n      }\n    }\n  } // function closeTeam() {\n  // }\n\n\n  document.getElementById('jsTeamClose').addEventListener('click', function () {\n    document.querySelector('body').classList.remove('build__team');\n  });\n\n  if (isReadonly) {\n    document.getElementById(\"btnUserUrl\").style.display = \"none\";\n  } else {\n    document.getElementById(\"btnUserUrl\").addEventListener(\"click\", userUrlBthHandler);\n  }\n\n  document.getElementById(\"usersList\").innerHTML = getUserList(users, isReadonly);\n}\n\nfunction userUrlBthHandler() {\n  var allCheckboxes = document.getElementById(\"usersForm\").querySelectorAll(\"input[type=checkbox]\");\n\n  var selectedCheckBoxes = _toConsumableArray(allCheckboxes).filter(function (el) {\n    return el.checked;\n  });\n\n  var selectedUserIds = selectedCheckBoxes.map(function (el) {\n    return el.value;\n  });\n  var selectedUserIdsCsv = selectedUserIds.length > 0 ? selectedUserIds.toString() : \"\";\n  var url = selectedUserIdsCsv && \"\".concat(window.location.origin).concat(window.location.pathname, \"?team=\").concat(selectedUserIdsCsv);\n  document.getElementById(\"selectedUsersUrl\").textContent = url;\n  document.querySelector('body').classList.add('build__team');\n}\n\nfunction getUserList(users, isReadOnly) {\n  var allUsers = users.map(function (user) {\n    return getUser(user, isReadOnly);\n  });\n  return allUsers.join(\"\");\n}\n\nfunction getUser(user, isReadOnly) {\n  return \"\\n      <div class=\\\"user\\\">\\n        <input type='checkbox' id='\".concat(user.id, \"' value='\").concat(user.id, \"' \").concat(isReadOnly ? \"hidden\" : \"\", \" >\\n\\t\\t\\t\\t<div class=\\\"user__info\\\">\\n\\t\\t\\t\\t\\t<label for='\").concat(user.id, \"'>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"user__image screen\\\">\\n\\t\\t\\t\\t\\t\\t\\t<img src=\\\"\").concat(user.image, \"\\\" alt=\\\"\").concat(user.name, \"\\\" />\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"user__desc\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"user__desc__text\\\">\").concat(user.desc, \"</span>\\n\\t\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"checkbox\\\"></span>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"user__data\\\">\\n\\t\\t\\t\\t\\t\\t\\t<h2 class=\\\"user__name\\\">\").concat(user.name, \"</h2>\\n\\t\\t\\t\\t\\t\\t\\t<p>\").concat(user.role, \"</p>\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</label>\\n\\t\\t\\t\\t</div>\\n      </div>\");\n}\n\nmain();"},"sourceMaps":null,"error":null,"hash":"b36ca16b29aa021b7f6da3a2884fbddd","cacheData":{"env":{}}}